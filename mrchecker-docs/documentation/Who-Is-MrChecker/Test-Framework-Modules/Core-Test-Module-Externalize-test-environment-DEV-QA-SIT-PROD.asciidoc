= System under test environments

image::images/image44.png[]

* _Quality assurance_ or QA is a way of preventing mistakes or defects in manufactured products and avoiding problems when delivering solutions or services to customers; which ISO 9000 defines as "part of quality management focused on providing confidence that quality requirements will be fulfilled".
* _System integration testing_ or SIT is a high-level software testing process in which testers verify that all related systems maintain data integrity and can operate in coordination with other systems in the same environment. The testing process ensures that all sub-components are integrated successfully to provide expected results.
* _Development_ or _Dev_ testing is performed by the software developer or engineer during the construction phase of the software development life-cycle. Rather than replace traditional QA focuses, it augments it. Development testing aims to eliminate construction errors before code is promoted to QA; this strategy is intended to increase the quality of the resulting software as well as the efficiency of the overall development and QA process.
* _Prod_ If the customer accepts the product, it is deployed to a _production_ environment, making it available to all users of the system.

image::images/image45.png[]

= How to use system environment

In Page classes, when you load / start web, it is uncommon to save fixed main url.

Value flexibility is a must, when your web application under test, have different main url, dependence on environmnent (DEV, QA, SIT, ..., PROD)

Instead of hard coded main url variable, you build your Page classe with dynamic variable.

Example of dynamic variable `GetEnvironmentParam.WWW_FONT_URL`

image::images/image46.png[]

= How to create / update system environment

== External file with variable values

Dynamic variable values are stored under path _mrchecker-app-under-test\src\resources\enviroments\environments.csv_.

*NOTE*: As environments.csv is Comma-separated file, please be aware of any edition and then save it under Excel.

image::images/image47.png[]

== Encrypting sensitive data

Some types of data you might want to store as environment settings are sensitive in nature (e.g. passwords). You might not want to store them (at least not in their plaintext form) in your repository. To be able to encrypt sensitive data you need to do following:

1. Create a secret (long, random chain of characters) and store it under _mrchecker-app-under-test\src\resources\secretData.txt_. Example: `LhwbTm9V3FUbBO5Tt5PiTUEQrXGgWrDLCMthnzLKNy1zA5FVTFiTdHRQAyPRIGXmsAjPUPlJSoSLeSBM`
2. Exclude the file from being checked into the git repository by adding it to _git.ignore_. You will need to pass the file over a different channel among your teammates.
3. Encrypt the values before putting them into the _environments.csv_ file by creating following script (put the script where your jasypt library resides, e.g. _C:\MrChecker_Test_Framework\m2\repository\org\jasypt\jasypt\1.9.2)_:
+
----
@ECHO OFF

set SCRIPT_NAME=encrypt.bat
set EXECUTABLE_CLASS=org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI
set EXEC_CLASSPATH=jasypt-1.9.2.jar
if "%JASYPT_CLASSPATH%" == "" goto computeclasspath
set EXEC_CLASSPATH=%EXEC_CLASSPATH%;%JASYPT_CLASSPATH%

:computeclasspath
IF "%OS%" == "Windows_NT" setlocal ENABLEDELAYEDEXPANSION
FOR %%c in (%~dp0..\lib\*.jar) DO set EXEC_CLASSPATH=!EXEC_CLASSPATH!;%%c
IF "%OS%" == "Windows_NT" setlocal DISABLEDELAYEDEXPANSION

set JAVA_EXECUTABLE=java
if "%JAVA_HOME%" == "" goto execute
set JAVA_EXECUTABLE="%JAVA_HOME%\bin\java"

:execute
%JAVA_EXECUTABLE% -classpath %EXEC_CLASSPATH% %EXECUTABLE_CLASS% %SCRIPT_NAME% %*
----
+
4. Encrypt the values by calling
+
----
.\encrypt.bat input=someinput password=secret

----ENVIRONMENT-----------------

Runtime: Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.111-b14



----ARGUMENTS-------------------

input: someinput
password: secret



----OUTPUT----------------------

JN3nOFol2GMZoUxR5z2wI2qdipcNH1UD
----
+
5. Mark the value as encrypted by adding a prefix 'ENC(' and suffix ')' like: `ENC(JN3nOFol2GMZoUxR5z2wI2qdipcNH1UD)`
+
image::images/image48.png[]

== Bridge between external file nad Page class

To map values from external file with Page class you ought to use class `GetEnvironmentParam`.

Therefore when you add new variable (row) in _environments.csv_ you might need to add this variable to `GetEnvironmentParam`.

image::images/image49.png[]

= Run test case with system environment

To run test case with system environment, please use:

* _-Denv=<NameOfEnvironment>_
* _<NameOfEnvironment>_ is taken as column name from file _mrchecker-app-under-test\src\test\resources\enviroments\environments.csv_

== Command Line

    mvn test site -Dtest=RegistryPageTest -Denv=DEV

== Eclipse

image::images/image50.png[]

image::images/image51.png[]

