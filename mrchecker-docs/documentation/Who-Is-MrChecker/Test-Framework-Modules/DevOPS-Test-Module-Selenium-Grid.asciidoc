= Selenium Grid

== What is Selenium Grid

Selenium Grid allows running web/mobile browsers test cases to fulfill basic factors, such as:

* Independent infrastructure, similar to end-users'
* Scalable infrastructure (\~50 simultaneous sessions at once)
* Huge variety of web browsers (from mobile to desktop)
* Continuous Integration and Continuous Delivery process
* Supporting multi-type programming languages (java, javascript, python, …​).

image::images/image88.png[]

On a daily basis, a test automation engineer uses their local environments for test case execution/development. However, a created browser test case has to be able to run on any  infrastructure. Selenium Grid enables this portability.

== Selenium Grid Structure

image::images/image89.png[]

Full documentation of Selenium Grid can be found https://github.com/SeleniumHQ/selenium[here] and http://docs.seleniumhq.org/docs/07_selenium_grid.jsp[here].

'Vanilla flavour' Selenium Grid is based on two, not very complicated ingredients:

1. *Selenium Hub* - as one machine, accepting connections to grid from test cases executors. It also plays a managerial role in connection to/from Selenium Nodes
2. *Selenium Node* - from one to many machines, where on each machine a browser used during test case execution is installed.

== How to setup

There are two options of Selenium Grid setup:

* Classic, static solution - http://docs.seleniumhq.org/docs/07_selenium_grid.jsp#installation[link]
* Cloud, scalable solution - https://bitbucket.org/lukasz_stefaniszyn/seleniumgriddockercompose/overview[link]

Advantages and disadvantages of both solutions:

image::images/image90.png[]

== How to use Selenium Grid with E2E Mr Checker Test Frameworks

Run the following command either in Eclipse or in Jenkins:

----
> mvn test -Dtest=com.capgemini.ntc.selenium.tests.samples.resolutions.ResolutionTest -DseleniumGrid="http://10.40.232.61:4444/wd/hub" -Dos=LINUX -Dbrowser=chrome
----

As a result of this command:

* `-Dtest=com.capgemini.ntc.selenium.features.samples.resolutions.ResolutionTest` - name of test case to execute
* `-DseleniumGrid="http://10.40.232.61:4444/wd/hub"` - IP address of Selenium Hub
* `-Dos=LINUX` - what operating system must be assumed during test case execution
* `-Dbrowser=chrome` - what type of browser will be used during test case execution

image::images/image91.png[]
