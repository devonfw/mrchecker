= Selenium Best Practices

The following table displays a few best practices that should be taken into consideration when developing Selenium test cases.

[cols=2*,options=header]
|===

|Best Practices
|Description

|"Keep it Simple"
|Do not force use every Selenium feature available - Plan before creating the actual test cases

|Using Cucumber
|Cucumber can be used to create initial testcases for further decision making

|Supporting multiple browsers
|Test on multiple browsers (in parallel, if applicable) if the application is expected to support multiple environments

|Test reporting
|Make use of test reporting modules like Junit which is included in the framework

|Maintainability
|Always be aware of the maintainability of tests - You should always be able to adapt to changes

|Testing types
|Which tests should be created? Rule of thumb: 70% Unit test cases, 20% Integration test cases and 10% UI Test cases

|Test data
|Consider before actually developing tests and choosing tools: Where to get test data from, how to reset test data

|===
