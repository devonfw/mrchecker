:toc: macro

= Tutorial: Open Elemental Subpage from A/B Testing

ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]

toc::[]
:idprefix:
:idseparator: -
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== What You Will Learn

In this test case, you will learn how to navigate to a subpage and interact with links using Selenium WebDriver.
Specifically, you will open the A/B Testing subpage, click an Elemental Selenium link that opens in a new tab, switch to the new tab, and check if the Elemental Selenium page is loaded successfully.

== Example

image::images/example1.png[]

Steps:

1. Open The Internet Main Page
2. Click A/B Testing link and go to A/B Test subpage
3. Click Elemental Selenium link and open it in new tab
4. Switch to Elemental Selenium page and check if it's loaded

image::images/example2.png[]

== Environment Configuration

For proper execution of tests, you need to configure the test environment using the `environments.csv` file.

The `environments.csv` file should contain configurations for variables like URLs.
Here's an example of how the `environments.csv` file might look:

[source,csv]
----
VAR                         , ENV1
THE_INTERNET_HEROKUAPP_URL  , https://the-internet.herokuapp.com/
ELEMENTAL_SELENIUM_URL      , https://elementalselenium.com/
----

The `GetEnvironmentParam` enum provides access to these configurations.
Here's the enum:

[source,java]
----
public enum GetEnvironmentParam {
    // Reads the environment variable from /src/resources/environments/environment.csv
    // Name of the enum must be in line with the cell name in /src/resources/environments/environment.csv
    THE_INTERNET_HEROKUAPP_URL,
    ELEMENTAL_SELENIUM_URL;

    private String value;

    @Override
    public String toString() {
        return getValue();
    }

    public String getValue() {
        if (null == this.value) {
            if (Objects.isNull(BaseTest.getEnvironmentService())) {
                throw new BFInputDataException("Environment Parameters class wasn't initialized properly");
            }
            this.value = BaseTest.getEnvironmentService()
                    .getValue(this.name())
                    .trim();
        }
        return this.value;
    }
}
----

=== SubURLs enum

Similarly, as in environmental variables case, create an enum for storing values of subURLs:

[source,java]
----
 public enum PageSubURLsEnum {

    BASIC_AUTH("basic_auth"),
    NEW_WINDOW("windows/new"),
    WINDOW("windows"),
    CHECKBOX("checkboxes"),
    CONTEXT_MENU("context_menu"),
    KEY_PRESS("key_presses"),
    DYNAMIC_CONTENT("dynamic_content"),
    HOVERS("hovers"),
    SORTABLE_DATA_TABLES("tables"),
    REDIRECT("redirector"),
    JAVASCRIPT_ALERTS("javascript_alerts"),
    CHALLENGING_DOM("challenging_dom"),
    STATUS_CODES("status_codes"),
    LOGIN("login"),
    ABTEST("abtest"),
    BROKEN_IMAGES("broken_images"),
    DROPDOWN("dropdown"),
    HORIZONTAL_SLIDER("horizontal_slider"),
    DOWNLOAD("download"),
    FORGOT_PASSWORD("forgot_password"),
    FORGOT_PASSWORD_EMAIL_SENT("email_sent"),
    EXIT_INTENT("exit_intent"),
    DYNAMIC_LOADING("dynamic_loading"),
    DISAPPEARING_ELEMENTS("disappearing_elements"),
    DRAG_AND_DROP("drag_and_drop"),
    DYNAMIC_CONTROLS("dynamic_controls"),
    UPLOAD("upload"),
    FLOATING_MENU("floating_menu"),
    FRAMES("frames"),
    GEOLOCATION("geolocation"),
    INFINITE_SCROLL("infinite_scroll"),
    JQUERY_UI("jqueryui/menu"),
    JAVASCRIPT_ERROR("javascript_error"),
    LARGE_AND_DEEP_DOM("large"),
    NESTED_FRAMES("nested_frames"),
    NOTIFICATION_MESSAGE("notification_message"),
    DOWNLOAD_SECURE("download_secure"),
    SHIFTING_CONTENT("shifting_content"),
    SLOW_RESOURCES("slow"),
    TYPOS("typos"),
    WYSIWYGEDITOR("tinymce");

    /*
     * Sub URLs are used as real locations in the test environment
     */
    private String subURL;

    PageSubURLsEnum(String subURL) {
        this.subURL = subURL;
    }

     PageSubURLsEnum() {

    }

    @Override
    public String toString() {
        return getValue();
    }

    public String getValue() {
        return subURL;
        }
  }
----

Instead of mapping data from an external file, you can store and access them directly from the enum class:

`PageSubURLsEnum.ABTEST.getValue()`

== Page Classes

=== A/B Test Page

Create a Page class for the A/B Testing page.
This page class represents the A/B Testing page and provides methods to interact with it.

[source,java]
----
 public class ABTestPage extends BasePage {
    private static final By selectorElementalSeleniumLink = By.cssSelector("div > div > a");

    @Override
    public boolean isLoaded() {
        getDriver().waitForPageLoaded();
        return getDriver().getCurrentUrl()
                .contains(PageSubURLsEnum.ABTEST.getValue());
    }

    @Override
    public void load() {
        BFLogger.logDebug("Load 'A/B Test Control' page.");
        getDriver().get(GetEnvironmentParam.THE_INTERNET_HEROKUAPP_URL.getValue() +
                PageSubURLsEnum.ABTEST.getValue());
        getDriver().waitForPageLoaded();
    }

    @Override
    public String pageTitle() {
        return getActualPageTitle();
    }

    /**
     * Clicks 'Elemental Selenium' link at the bottom of the page.
     */
    public void clickElementalSeleniumLink() {
        getDriver().findElementDynamic(selectorElementalSeleniumLink)
                .click();
        getDriver().waitForPageLoaded();
    }

    /**
     * Switches window to the next one - different from the current.
     */
    public void switchToNextTab() {
        ArrayList<String> tabsList = new ArrayList<>(getDriver().getWindowHandles());
        getDriver().switchTo()
                .window(tabsList.get(1));
    }
}
----

=== Elemental Selenium Page Class

Create a Page class for the Elemental Selenium page.
This page class represents the Elemental Selenium subpage and provides methods to interact with it.

[source,java]
----
 public class ElementalSeleniumPage extends BasePage {
    @Override
    public boolean isLoaded() {
        getDriver().waitForPageLoaded();
        return getDriver().getCurrentUrl()
                .contains(GetEnvironmentParam.ELEMENTAL_SELENIUM_URL.getValue());
    }

    @Override
    public void load() {

    }

    @Override
    public String pageTitle() {
        return getActualPageTitle();
    }
}
----

== Test Class

Create a test class tailored for the A/B Testing scenario.
This class contains methods and assertions, ensuring a detailed test execution process.

`shouldOpenElementalSeleniumPageWhenClickElementalSeleniumLink()` - A test case method that performs a series of steps and asserts the expected outcome.

[source,java]
----
 class ABTest extends BaseTest {
    private final ABTestPage abTestPage = PageFactory.getPageInstance(ABTestPage.class);
    private final ElementalSeleniumPage elementalSeleniumPage = PageFactory.getPageInstance(ElementalSeleniumPage.class);

    @Test
    void shouldOpenElementalSeleniumPageWhenClickElementalSeleniumLink() {
        BFLogger.logInfo("Click Elemental Selenium link");
        abTestPage.clickElementalSeleniumLink();

        BFLogger.logInfo("Switch browser's tab to newly opened one");
        abTestPage.switchToNextTab();

        BFLogger.logInfo("Verify if Elemental Selenium Page is opened");
        assertTrue(elementalSeleniumPage.isLoaded(), "Unable to open Elemental Selenium page");
    }
}
----

== Conclusion

In this tutorial, we explored how to navigate web pages, interact with links, and manage multiple tabs using Selenium WebDriver.
You learned how to open the A/B Testing subpage, click an Elemental Selenium link that opens in a new tab, switch to the new tab, and verify if the Elemental Selenium page loaded successfully.




