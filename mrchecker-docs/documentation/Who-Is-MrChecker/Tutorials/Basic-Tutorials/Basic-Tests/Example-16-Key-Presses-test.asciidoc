:toc: macro

= Tutorial: Testing Key Pressing

ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]

toc::[]
:idprefix:
:idseparator: -
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== What you will learn

In this tutorial, you will learn how to test key pressing on a web page.
We will demonstrate how to simulate pressing a keyboard key and verify the displayed message on the web page.

image::images/example46.png[]

The website uses JavaScript to read the key pressed and display its value.

image::images/example47.png[]

== Page Class

[source,java]
----
public class KeyPressesPage extends BasePage {
	private final By selectorResult = By.cssSelector("#result");

	@Override
	public boolean isLoaded() {
		getDriver().waitForPageLoaded();
		return getDriver().getCurrentUrl()
				.contains(PageSubURLsProjectYEnum.KEY_PRESS.getValue());
	}

	@Override
	public void load() {
		BFLogger.logDebug("Load 'Key Presses' page.");
		getDriver().get(GetEnvironmentParam.THE_INTERNET_HEROKUAPP_URL.getValue() +
				PageSubURLsProjectYEnum.KEY_PRESS.getValue());
		getDriver().waitForPageLoaded();
	}

	@Override
	public String pageTitle() {
		return getActualPageTitle();
	}

	/**
	 * Presses given keyboard key.
	 *
	 * @param keyToPress
	 *            Key to be pressed on keyboard
	 */
	public void pressKey(String keyToPress) {
		getAction().sendKeys(keyToPress)
				.perform();
	}

	/**
	 * Returns information from web page about pressed keyboard key.
	 *
	 * @return Information from web page about pressed key
	 */
	public String getPressedKeyInformation() {
		return getDriver().findElementDynamic(selectorResult)
				.getText();
	}
}
----

The `KeyPressesPage` class is responsible for interacting with the web page.
It includes methods to check if the page is loaded, load the page, and simulate pressing a keyboard key.
You can use this class to press keys and retrieve information about the pressed key.

== Test Class

Steps:

1. Open Key Presses subpage on The Internet Main Page
2. Press a key
3. Check if a displayed message contains the pressed key

[source,java]
----
public class KeyPressesTest extends BaseTest {
	private final KeyPressesPage keyPressesPage = PageFactory.getPageInstance(KeyPressesPage.class);

	private final String	keyToBePressed	= "Q";
	private final String	expectedMessage	= "You entered: Q";

	@Override
	public void setUp() {
		keyPressesPage.load();
		BFLogger.logInfo("Verify if Key Presses page is opened");
		assertTrue(keyPressesPage.isLoaded(), "Unable to open Key Presses page");
	}

	@Test
	public void shouldWebsiteReturnInformationAboutPressedKey() {
		BFLogger.logInfo("Press a keyboard key");
		keyPressesPage.pressKey(keyToBePressed);

		BFLogger.logInfo("Verify if website give valid information about pressed keyboard key");
		assertEquals(expectedMessage, keyPressesPage.getPressedKeyInformation(), "Information about the pressed key is invalid");
	}
}
----

The `KeyPressesTest` class defines the test steps.
It opens the Key Presses page, simulates pressing a keyboard key, and checks the displayed message on the web page.

== Conclusion

In this tutorial, you have learned how to test key pressing on a web page.
You now have the skills to simulate keyboard key presses and validate the displayed information on the web page.
