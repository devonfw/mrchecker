@Library('testers-commons@develop')_
import com.capgemini.mrchecker.*;
pipeline {
	parameters{
		string(defaultValue:"127.0.0.1:4444/wd/hub",description:'URL to SELENIUM GRID',name: 'SELENIUM_GRID_URL')
		string(defaultValue:"MTS_GUI,MTS_API",description:'Groups to be run in selenium test stage',name: 'SELENIUM_GROUPS')
		choice(name: 'BROWSER', choices: ['firefox', 'chrome', 'opera'], description: 'Browser to run test with')

	}
	agent {
		node { label "master" }
	}
	options {
		timestamps()
	}
	stages{
		stage('Preparation'){
			steps{
				script{
					new MavenJobs().runCleanJob();
				}
			}
		}
		stage('Test'){
			stages{
				stage('Junit'){
					steps{
						script{
							new MavenJobs().runJunitTestsFromGroups();
						}
					}
				}
				stage('Selenium'){
					steps{
						script{
							new MavenJobs().runSeleniumTestsFromGroups();
						}
					}
				}
			}

		}
		stage('Reporting'){
			stages{
				stage('Allure'){
					steps{
						script{
							allure includeProperties: false, jdk: '', report: "allure-report", results: [[path: "target/allure-results"]]
						}
					}
				}
			}
		}
	}
	post{
		always{
			script{
				UserID = "${currentBuild?.rawBuild?.getCause(hudson.model.Cause$UserIdCause)?.properties?.userId}"
				if(!utils.isStartedByTimer()){
					mail_receiver = "${UserID}@domain.com";
				}else{
					mail_receiver = null
				}
				if(mail_receiver){
					emailext  mimeType: 'text/html', body: """Your job ${env.BUILD_URL} just finished.""", subject: "${subjectText}", to: "${mail_receivers}"
					//maybe you should add some more meaningful values in the body
				}
			}
		}
	}
}