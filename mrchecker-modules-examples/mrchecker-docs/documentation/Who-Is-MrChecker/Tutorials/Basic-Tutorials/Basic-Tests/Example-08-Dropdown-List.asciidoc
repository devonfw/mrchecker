:toc: macro

= Tutorial: Selecting an Element from a Dropdown List

ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]

toc::[]
:idprefix:
:idseparator: -
:reproducible:
:source-highlighter: rouge
:listing-caption: Listing

== What You Will Learn

In this tutorial, you will learn:

* How to interact with dropdown lists on a web page.
* How to select options from a dropdown list.
* How to verify the selected option.

== Example

image::images/example16.png[]

Check in the developer mode how a Dropdown List's content has been organized.

image::images/example17.png[]

Notice that the Dropdown Options have different attributes, such as "disabled" or "selected".

Steps:

1. Open Dropdown subpage on The Internet Main Page
2. Select first dropdown Option
3. Check if Option 1 is selected
4. Select second dropdown Option
5. Check if Option 2 is selected

== Page Class

=== Dropdown Page

[source,java]
----
public class DropdownPage extends BasePage {
	private final By dropdownListSelector = By.cssSelector("#dropdown");

	@Override
	public boolean isLoaded() {
		getDriver().waitForPageLoaded();
		return getDriver().getCurrentUrl()
				.contains(PageSubURLsProjectYEnum.DROPDOWN.getValue());
	}

	@Override
	public void load() {
		BFLogger.logDebug("Load 'Dropdown List' page.");
		getDriver().get(GetEnvironmentParam.THE_INTERNET_HEROKUAPP_URL.getValue() +
				PageSubURLsProjectYEnum.DROPDOWN.getValue());
		getDriver().waitForPageLoaded();
	}

	@Override
	public String pageTitle() {
		return getActualPageTitle();
	}

	/**
	 * Selects dropdown`s value by given index.
	 *
	 * @param index
	 *            Index of option to be selected
	 */
	public void selectDropdownValueByIndex(int index) {
		getDriver().elementDropdownList(dropdownListSelector)
				.selectDropdownByIndex(index);
	}

	/**
	 * Returns text value of first selected dropdown`s option.
	 *
	 * @return String object representing value of dropdown`s option
	 */
	public String getSelectedDropdownValue() {
		return getDriver().elementDropdownList(dropdownListSelector)
				.getFirstSelectedOptionText();
	}
}
----

The `DropdownPage` class contains methods to interact with the Dropdown page.
It includes functionality to select dropdown options by index and retrieve the text value of the selected dropdown option.

=== DropdownListElement class

DropdownListElement is MrChecker's class, which contains methods for performing the dropdown list of actions:

----
elementDropdownList() - returns DropdownListElement Object 
----

== Test Class

[source,java]
----
public class DropdownTest extends BaseTest {
	private final DropdownPage dropdownPage = PageFactory.getPageInstance(DropdownPage.class);

	private final String	expectedFirstOptionValue	= "Option 1";
	private final String	expectedSecondOptionValue	= "Option 2";

	@Override
	public void setUp() {
		dropdownPage.load();
		BFLogger.logInfo("Verify if Dropdown page is opened");
		assertTrue(dropdownPage.isLoaded(), "Unable to open Dropdown page");
	}

	@Test
	public void shouldGetExpectedDropdownTextOptionAfterSelection() {
		BFLogger.logInfo("Select first dropdown option");
		dropdownPage.selectDropdownValueByIndex(1);

		BFLogger.logInfo("Verify if selected option text is equal to the expected one");
		assertEquals(expectedFirstOptionValue, dropdownPage.getSelectedDropdownValue(),
				"Selected value is different than expected");

		BFLogger.logInfo("Select second dropdown option");
		dropdownPage.selectDropdownValueByIndex(2);

		BFLogger.logInfo("Verify if selected option text is equal to the expected one");
		assertEquals(expectedSecondOptionValue,
				dropdownPage.getSelectedDropdownValue(), "Selected value is different than expected");
	}
}
----

In the test method `shouldGetExpectedDropdownTextOptionAfterSelection()`, the goal is to select dropdown options by index and verify that the selected option text matches the expected value.

== Conclusion

In this tutorial, you've learned how to interact with dropdown lists on a web page, select options from a dropdown list, and verify the selected option.
