= Tutorial: Operating on Multiple Browser Windows

== What You Will Learn

In this tutorial, you will learn how to:

- Interact with web pages to open a new browser window.
- Handle multiple browser windows while automating web tests.
- Check if a new web page has successfully opened in a new window.

This simple example demonstrates how to operate on multiple browser windows.
When you click the link, a new website will be opened in a new browser window.

image::images/example58.png[]

image::images/example59.png[]

== Page Class

=== DemoQABrowserWindowsPage

[source,java]
----
public class DemoQABrowserWindowsPage extends BasePage {
  private final By selectorNewWindowButton = By.cssSelector("#windowButton");

  @Override
  public boolean isLoaded() {
    getDriver().waitForPageLoaded();
    return getDriver().getCurrentUrl()
      .contains(GetEnvironmentParam.DEMO_QA_BROWSER_WINDOWS_URL.getValue());
  }

  @Override
  public void load() {
    BFLogger.logDebug("Load 'Browser Windows' page.");
    getDriver().get(GetEnvironmentParam.DEMO_QA_BROWSER_WINDOWS_URL.getValue());
    getDriver().waitForPageLoaded();
  }

  @Override
  public String pageTitle() {
    return getActualPageTitle();
  }

  /**
   * Clicks 'New Window' button.
   */
  public void clickNewWindowButton() {
    getDriver().findElementDynamic(selectorNewWindowButton)
      .click();
    getDriver().waitForPageLoaded();
  }
}
----

The `DemoQABrowserWindowsPage` class is designed to interact with the web page.
It includes methods to verify if the page is loaded, load the page, and click a link that opens a new website in a new browser window.

Additionally, there is a `NewWindowPage` class for handling the new window, which implements the necessary methods.

[source,java]
----
public class NewWindowPage extends BasePage {
  @Override
  public boolean isLoaded() {
    // Get a list of open windows.
    List<String> windows = new ArrayList<>(getDriver().getWindowHandles());

    // Switch to the most recently opened window.
    getDriver()
      .switchTo()
      .window(windows.get(windows.size() - 1));

    // Maximize the current window for an optimal view.
    getDriver()
      .manage()
      .window()
      .maximize();

    // Wait for the page to load completely (not shown here).
    getDriver().waitForPageLoaded();

    // Check if the current page's URL contains the specified pattern.
    return getDriver().getCurrentUrl()
      .contains(GetEnvironmentParam.DEMO_QA_SAMPLE_URL.getValue());
  }

  @Override
  public void load() {
    BFLogger.logDebug("Load 'New Sample Window' page.");
    getDriver().get(GetEnvironmentParam.DEMO_QA_SAMPLE_URL.getValue());
    getDriver().waitForPageLoaded();
  }

  @Override
  public String pageTitle() {
    return getActualPageTitle();
  }
}
----

The `NewWindowPage` class is used to manage the new browser window that opens when the link is clicked.
It includes methods to check if the page is loaded and load the page.

== Test Class

Steps:

1. Open Browser Windows subpage on DemoQA Browser Windows Page
2. Click the "New Window" button
3. Check if a new Sample page is opened in the second window

[source,java]
----
public class MultipleWindowsTest extends BaseTest {
  private final DemoQABrowserWindowsPage demoQABrowserWindowsPage = PageFactory.getPageInstance(DemoQABrowserWindowsPage.class);
  private final NewWindowPage newWindowPage = PageFactory.getPageInstance(NewWindowPage.class);

  @Override
  public void setUp() {
    demoQABrowserWindowsPage.load();

    BFLogger.logInfo("Verify if Multiple Windows page is opened");
    assertTrue(demoQABrowserWindowsPage.isLoaded(), "Unable to open Multiple Windows page");
  }

  @Test
  public void verifyIfNewBrowserWindowOpens() {
    BFLogger.logInfo("Click 'New Window' button");
    demoQABrowserWindowsPage.clickNewWindowButton();

    BFLogger.logInfo("Verify if 'New window page' is opened");
    assertTrue(newWindowPage.isLoaded(), "Unable to open a new browser window");
  }
}
----

== Conclusion

In this tutorial, you've learned how to interact with web pages to open a new browser window, manage multiple browser windows while automating web tests, and verify if a new web page has successfully opened in a new window.
This skill is valuable for testing scenarios that involve multiple windows in web applications.
